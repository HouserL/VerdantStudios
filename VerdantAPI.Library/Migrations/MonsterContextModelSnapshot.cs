// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VerdantAPI.Library.Context;

#nullable disable

namespace VerdantWebUI.Library.Migrations
{
    [DbContext(typeof(MonsterDBContext))]
    partial class MonsterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VerdantAPI.Library.Models.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("DamageTypes");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.StandardAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("StandardActions");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.Stats", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");


                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");
                    
                    b.HasKey("Id");

                });

            modelBuilder.Entity("VerdantAPI.Library.Models.DamageType", b =>
                {
                    b.HasOne("VerdantAPI.Library.Models.Monster", null)
                        .WithMany("DamageWeaknesses")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.Monster", b =>
                {
                    b.HasOne("VerdantAPI.Library.Models.Stats", "Stats")
                        .WithOne()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.StandardAction", b =>
                {
                    b.HasOne("VerdantAPI.Library.Models.Monster", null)
                        .WithMany("Actions")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("VerdantAPI.Library.Models.Monster", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("DamageWeaknesses");
                });
#pragma warning restore 612, 618
        }
    }
}
